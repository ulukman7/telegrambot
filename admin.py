
import sqlite3
import random
import re
from datetime import datetime
from telebot import TeleBot
from telebot import  types
bot = TeleBot("6582575861:AAHK19MQ8_PIkZjLIETzBizj3i0QS36eT7Q")


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    add_btn = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
    list_btn = types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–∞")
    list_draw_btn = types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø–æ —Ä–æ–∑—ã–≥—Ä—ã—à—É.")
    start_btn = types.KeyboardButton("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")
    markup.add(add_btn, list_btn, list_draw_btn, start_btn)
    bot.send_message(message.chat.id, "Welcome to admin bot!")


# Mahsulot qo'shish
@bot.message_handler(commands=['add_product'])
def add_product(message):
    bot.send_message(message.chat.id, "Enter product name:")
    bot.register_next_step_handler(message, add_product_name)



def add_product_name(message):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  name = message.text

  cursor.execute("INSERT INTO products VALUES (?, ?)", (None, name))

  data = cursor.fetchone()

  if data is None:
    cursor.execute("""CREATE TABLE IF NOT EXISTS products (
                id INTEGER PRIMARY KEY,
                name TEXT);""")
    cursor.execute("INSERT INTO products (name) VALUES (?)", (name,))
    bot.send_message(message.chat.id, "üéâ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
  conn.commit()
  conn.close()

  # Xabarni jo'natish

# Mahsulotlar ro'yxati
@bot.message_handler(commands=['list_products'])
def get_products(message):
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM products")
    products = cursor.fetchall()

    if len(products) == 0:
        bot.send_message(message.chat.id, "There are no products yet")
        return

    text = "Registered products:\n"
    for product in products:
        text += f"{product[0]}. {product[1]}\n"

    bot.send_message(message.chat.id, text)
    conn.commit()
    conn.close()

# Auktsion uchun mahsulot tanlash
@bot.message_handler(commands=['select_auction_product'])
def select_auction_product(message):
    # Avval mahsulotlar ro'yxatini ko'rsatamiz

    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("""
  CREATE TABLE IF NOT EXISTS auction_products (
    id INTEGER PRIMARY KEY,
    product_id INTEGER
  )
""")
    cursor.execute("SELECT * FROM products")
    product_list = cursor.fetchall()
    auction_names = ["%s. %s" % (a[0], a[1]) for a in product_list]
    auctions_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    auctions_keyboard.add(*auction_names)

    bot.send_message(message.chat.id, "Choose auction:", reply_markup=auctions_keyboard)
@bot.message_handler(regexp='(\d+).')
def add_delete_product(message):

  product_id = message.text.split('.')[0]
# Knopkalar
  add_btn = types.KeyboardButton("‚ûï –î–æ–±–æ–≤–∏—Ç—å")
  delete_btn = types.KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")

    # Knopkalar paneli
  buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
  buttons.add(add_btn, delete_btn)

    # Knopkalarni jo'natish
  bot.send_message(message.chat.id, "–≤—ã–±–∏—Ä–∞–π", reply_markup=buttons)

# Mahsulotni auktsionga qo'shish
@bot.message_handler(text='‚ûï add')
def add_product_to_auction(message):
  product_id = message.text.split(' ')[1]

  conn = sqlite3.connect('database.db')
  cursor = conn.cursor()
  cursor.execute("""
  CREATE TABLE IF NOT EXISTS auction_products (
    id INTEGER PRIMARY KEY,
    product_id INTEGER
  )
""")
  cursor.execute("SELECT * FROM products WHERE id=?", (product_id,))
  product = cursor.fetchone()

  if product:
    cursor.execute("INSERT INTO auction_products (product_id) VALUES (?)", (product_id,))
    conn.commit()
    bot.reply_to(message, "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
  else:
    bot.reply_to(message, "–¢–∞–∫–æ–π —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")

  conn.close()

# Mahsulotni auktsiondan olib tashlash
@bot.message_handler(commands=['delete_product_from_auction'])
def delete_product_from_auction(message):
  product_id = message.text.split(' ')[1]

  conn = sqlite3.connect('database.db')
  cursor = conn.cursor()

  cursor.execute("DELETE FROM auction_products WHERE product_id=?", (product_id,))
  conn.commit()

  bot.reply_to(message, "–ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")

  conn.close()

# Knopkalar uchun handlerlar
@bot.message_handler(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å")
def add(message):
    product_id = message.text # bu yerga mahsulot ID si kiritiladi
    add_product_to_auction(product_id)

@bot.message_handler(text="üóë –£–¥–∞–ª–∏—Ç—å")
def delete(message):
    product_id = message.text
    delete_product_from_auction(product_id)

@bot.message_handler(commands=['delete_product'])
def delete_product_by_id(message):
  conn = sqlite3.connect('database.db', check_same_thread=False)
  cursor = conn.cursor()
  cursor.execute("""
  CREATE TABLE IF NOT EXISTS auction_products (
    id INTEGER PRIMARY KEY,
    product_id INTEGER
  )
""")
  product_id = message.text

  cursor.execute("DELETE FROM products WHERE id=?", (product_id,))
  conn.commit()
  conn.close()
  bot.send_message(message.chat.id, "Product deleted successfully")
# –∞–∫—Ü–∏—è
@bot.message_handler(commands=['create_auction'])
def create_auction(message):
    bot.send_message(message.chat.id, "Enter auction name:")
    bot.register_next_step_handler(message, auction_name_step)

def auction_name_step(message):
    name = message.text
    # –û—Å—Ç–∞–≤—à–∏–µ—Å—è —à–∞–≥–∏...
    bot.send_message(message.chat.id, "Enter start date (DD.MM.YYYY):")
    bot.register_next_step_handler(message, auction_start_date_step, name)

def auction_start_date_step(message, name):
    start_date = message.text
    #...
    bot.send_message(message.chat.id, "Enter end date (DD.MM.YYYY):")
    bot.register_next_step_handler(message, auction_end_date_step, name, start_date)

def auction_end_date_step(message, name, start_date):
   end_date = message.text
   #...
   bot.send_message(message.chat.id, "Enter minimum amount:")
   bot.register_next_step_handler(message, auction_min_amount_step, name, start_date, end_date)

def auction_min_amount_step(message, name, start_date, end_date):

    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("""
CREATE TABLE IF NOT EXISTS auctions (
    id INTEGER PRIMARY KEY,
    name TEXT,
    start_date TEXT,
    end_date TEXT,
    min_amount INTEGER
);
""")
    min_amount = message.text

# –ú—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞—É–∫—Ü–∏–æ–Ω–∞
    cursor.execute("INSERT INTO auctions VALUES (?, ?, ?, ?, ?)",
                   (None, name, start_date, end_date, min_amount))

    bot.send_message(message.chat.id, "Auction created successfully!")

    conn.commit()
    conn.close()
# –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
@bot.message_handler(commands=['auction_participants'])
def auction_participants(message):
# –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤
    conn = sqlite3.connect('database.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute("""
CREATE TABLE IF NOT EXISTS participants (
    id INTEGER PRIMARY KEY,
    name TEXT,
    phone TEXT,
    receipt_id INTEGER,
    auction_id INTEGER
);
""")
    cursor.execute("SELECT * FROM auctions")
    auctions = cursor.fetchall()

    auction_names = ["%s. %s" % (a[0], a[1]) for a in auctions]
    auctions_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    auctions_keyboard.add(*auction_names)

    bot.send_message(message.chat.id, "Choose auction:", reply_markup=auctions_keyboard)

    # bot.register_next_step_handler(message, show_participants)

def show_participants(message, auction_id):

  # –≤—ã–±–æ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –∞—É–∫—Ü–∏–æ–Ω—É
  cursor.execute("SELECT * FROM participants WHERE auction_id=?", (auction_id,))

  # –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
  for participant in cursor.fetchall():
    bot.send_message(chat_id, f"{participant[1]} {participant[2]} {participant[3]}")

def select_winner(auction_id):

  # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  participants = get_participants(auction_id)

  # —Ä–∞–Ω–¥–æ–º–Ω—ã–π –≤—ã–±–æ—Ä
  winner = random.choice(participants)

  # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  bot.send_message(chat_id, f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner['name']} {winner['phone']}")

# G'olibni tanlash
# @bot.message_handler(commands=['select_winner'])
# def select_winner(auction_id):
#   winner_index = random.randint(0, len(participants)-1)
#   winner = participants[winner_index]
#   bot.send_message(chat_id, f"Winner: {winner.name} ({winner.phone})")
bot.polling()

